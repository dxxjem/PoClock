"use strict";const r=require("electron"),c=()=>r.ipcRenderer.invoke("minimize-window"),s=()=>r.ipcRenderer.invoke("maximize-window"),t=()=>r.ipcRenderer.invoke("close-window"),d={sendNotification:e=>r.ipcRenderer.send("notification",e),setProgressBar:e=>r.ipcRenderer.invoke("set-progress-bar",e),setTaskbarIcon:e=>r.ipcRenderer.invoke("set-taskbar-icon",e),minimizeWindow:c,maximizeWindow:s,closeWindow:t};try{r.contextBridge.exposeInMainWorld("electronAPI",d),console.log("Electron API exposed successfully")}catch(e){console.error("Failed to expose Electron API:",e)}r.contextBridge.exposeInMainWorld("ipcRenderer",{on(e,n){return r.ipcRenderer.on(e,(o,...i)=>n(o,...i))},off(e,n){return r.ipcRenderer.off(e,n)},send(e,...n){return r.ipcRenderer.send(e,...n)},invoke(e,...n){return r.ipcRenderer.invoke(e,...n)}});r.contextBridge.exposeInMainWorld("electronAPI",{sendNotification:e=>(console.log("发送通知:",e),r.ipcRenderer.send("notification",e)),setProgressBar:e=>(console.log("设置进度条:",e),r.ipcRenderer.invoke("set-progress-bar",e)),setTaskbarIcon:async e=>{console.log("设置任务栏图标:",e);try{const n=await r.ipcRenderer.invoke("set-taskbar-icon",e);return console.log("任务栏图标设置结果:",n),n}catch(n){return console.error("任务栏图标设置失败:",n),{success:!1,error:n.message||"未知错误"}}}});
